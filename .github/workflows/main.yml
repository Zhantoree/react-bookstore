name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repo
      - name: Checkout code
        run: |
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE

      # 2. Install nvm & Node.js 18 LTS
      - name: Install nvm and Node.js LTS
        run: |
          export NVM_DIR="$RUNNER_TEMP/.nvm"
          mkdir -p "$NVM_DIR"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          source "$NVM_DIR/nvm.sh"
          nvm install --lts
          nvm use --lts
          echo "Node version: $(node -v)"
          echo "npm version:  $(npm -v)"

      # 3. Install deps
      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          npm ci

      # 4. Run tests if you have a test script
      - name: Run tests (if present)
        run: |
          cd $GITHUB_WORKSPACE
          npm test --if-present

      # 5. Docker login
      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" \
            | docker login ${{ secrets.DOCKER_REGISTRY }} \
              --username ${{ secrets.DOCKER_USERNAME }} \
              --password-stdin

      # 6. Build & push Docker image
      - name: Build & push Docker image
        run: |
          cd $GITHUB_WORKSPACE
          IMAGE="${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/frontend"
          docker build -t "$IMAGE:latest" .
          docker tag "$IMAGE:latest" "$IMAGE:${{ github.sha }}"
          docker push "$IMAGE:latest"
          docker push "$IMAGE:${{ github.sha }}"
